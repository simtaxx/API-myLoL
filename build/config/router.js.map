{"version":3,"sources":["../../src/config/router.js"],"names":["router","express","Router","euUrl","playerIdUrl","playerDataUrl","getUser","username","axios","get","params","api_key","apiKey","getUserData","userId","req","res","render","query","userProfil","data","id","userData","length","json","error","response"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;AACA,IAAMC,QAAQ,gCAAd;AACA,IAAMC,cAAc,qCAApB;AACA,IAAMC,gBAAgB,qCAAtB;;AAEA,IAAMC,UAAU,SAAVA,OAAU,CAACC,QAAD;AAAA,SAAcC,gBAAMC,GAAN,CAAUN,QAAQC,WAAR,GAAsBG,QAAhC,EAA0C,EAAEG,QAAQ,EAAEC,SAASC,cAAX,EAAV,EAA1C,CAAd;AAAA,CAAhB;AACA,IAAMC,cAAc,SAAdA,WAAc,CAACC,MAAD;AAAA,SAAYN,gBAAMC,GAAN,CAAUN,QAAQE,aAAR,GAAwBS,MAAlC,EAA0C,EAAEJ,QAAQ,EAAEC,SAASC,cAAX,EAAV,EAA1C,CAAZ;AAAA,CAApB;;AAEAZ,OAAOS,GAAP,CAAW,GAAX,EAAgB,UAACM,GAAD,EAAMC,GAAN,EAAc;AAC5BA,MAAIC,MAAJ,CAAW,OAAX;AACD,CAFD;;AAIAjB,OAAOS,GAAP,CAAW,SAAX;AAAA,qEAAsB,iBAAOM,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACdT,oBADc,GACHQ,IAAIG,KAAJ,CAAUX,QADP;AAAA;AAAA;AAAA,mBAGOD,QAAQC,QAAR,CAHP;;AAAA;AAGZY,sBAHY;AAIZL,kBAJY,GAIHK,WAAWC,IAAX,CAAgBC,EAJb;AAAA;AAAA,mBAKKR,YAAYC,MAAZ,CALL;;AAAA;AAKZQ,oBALY;;AAMlB,gBAAIA,SAASF,IAAT,CAAcG,MAAlB,EAA0B;AACxBP,kBAAIQ,IAAJ,CAAS,EAAEJ,MAAME,SAASF,IAAjB,EAAT;AACD,aAACJ,IAAIQ,IAAJ,CAAS,EAAEC,OAAO,6CAAT,EAAT;AARgB;AAAA;;AAAA;AAAA;AAAA;;AAUlBT,gBAAIQ,IAAJ,CAAS,YAAME,QAAN,CAAeN,IAAxB;;AAVkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAAA;AAAA;AAAA;AAAA;;kBAcepB,M","file":"router.js","sourcesContent":["import express from 'express'\nimport axios from 'axios'\nimport { apiKey } from './config'\n\nconst router = express.Router()\nconst euUrl = 'https://euw1.api.riotgames.com'\nconst playerIdUrl = '/lol/summoner/v4/summoners/by-name/'\nconst playerDataUrl = '/lol/league/v4/entries/by-summoner/'\n\nconst getUser = (username) => axios.get(euUrl + playerIdUrl + username, { params: { api_key: apiKey  } })\nconst getUserData = (userId) => axios.get(euUrl + playerDataUrl + userId, { params: { api_key: apiKey  } })\n\nrouter.get('/', (req, res) => {\n  res.render('index')\n})\n\nrouter.get('/player', async (req, res) => {\n  const username = req.query.username\n  try {\n    const userProfil = await getUser(username)\n    const userId = userProfil.data.id\n    const userData = await getUserData(userId)\n    if (userData.data.length) {\n      res.json({ data: userData.data })\n    } res.json({ error: 'Sorry this user have no ranked informations' })\n  } catch (error) {\n    res.json(error.response.data)\n  }\n})\n\nexport default router"]}